// Environment Variables - Dynamic configuration with ${VAR:-default} syntax
// Learn how to make your configurations environment-aware and flexible

EnvironmentVariablesDemo {
    // === BASIC ENVIRONMENT VARIABLE USAGE ===
    
    // Required environment variable (no default)
    // Will fail if DATABASE_URL is not set
    database_url = ${DATABASE_URL},
    
    // Environment variable with default fallback
    // Uses "localhost:5432" if DB_HOST is not set
    database_host = ${DB_HOST:-"localhost:5432"},
    
    // === COMMON PATTERNS ===
    
    // Application settings
    app_name = ${APP_NAME:-"My Application"},
    app_version = ${APP_VERSION:-"1.0.0"},
    environment = ${ENVIRONMENT:-"development"},
    
    // Server configuration
    server = {
        host = ${SERVER_HOST:-"0.0.0.0"},
        port = ${SERVER_PORT:-8080},
        workers = ${WORKER_COUNT:-4}
    },
    
    // Database configuration
    database = {
        host = ${DB_HOST:-"localhost"},
        port = ${DB_PORT:-5432},
        name = ${DB_NAME:-"myapp"},
        user = ${DB_USER:-"postgres"},
        password = ${DB_PASSWORD},  // Required - no default for security
        ssl_mode = ${DB_SSL_MODE:-"prefer"}
    },
    
    // === DIFFERENT DATA TYPES ===
    
    // String values (most common)
    log_level = ${LOG_LEVEL:-"info"},
    secret_key = ${SECRET_KEY:-"dev-secret-key-change-in-production"},
    
    // Numeric values
    max_connections = ${MAX_CONNECTIONS:-100},
    timeout_seconds = ${TIMEOUT_SECONDS:-30},
    memory_limit_mb = ${MEMORY_LIMIT_MB:-512},
    
    // Boolean values
    debug_mode = ${DEBUG:-false},
    enable_metrics = ${ENABLE_METRICS:-true},
    maintenance_mode = ${MAINTENANCE_MODE:-false},
    
    // === ADVANCED PATTERNS ===
    
    // URL construction
    redis_url = ${REDIS_URL:-"redis://localhost:6379/0"},
    elasticsearch_url = ${ELASTICSEARCH_URL:-"http://localhost:9200"},
    
    // File paths
    log_file = ${LOG_FILE:-"/var/log/myapp.log"},
    config_dir = ${CONFIG_DIR:-"/etc/myapp"},
    data_dir = ${DATA_DIR:-"/var/lib/myapp"},
    
    // API keys and secrets
    api_keys = {
        stripe = ${STRIPE_API_KEY},           // Required
        sendgrid = ${SENDGRID_API_KEY},       // Required  
        analytics = ${ANALYTICS_KEY:-""},     // Optional
    },
    
    // === ENVIRONMENT-SPECIFIC CONFIGURATIONS ===
    
    // Development settings
    development = {
        database_url = ${DEV_DATABASE_URL:-"postgres://localhost/myapp_dev"},
        log_level = ${DEV_LOG_LEVEL:-"debug"},
        enable_hot_reload = ${DEV_HOT_RELOAD:-true}
    },
    
    // Production settings
    production = {
        database_url = ${PROD_DATABASE_URL},  // Required in production
        log_level = ${PROD_LOG_LEVEL:-"warn"},
        enable_monitoring = ${PROD_MONITORING:-true},
        replica_count = ${PROD_REPLICAS:-3}
    },
    
    // === FEATURE FLAGS ===
    
    features = {
        new_ui = ${FEATURE_NEW_UI:-false},
        beta_api = ${FEATURE_BETA_API:-false},
        experimental_cache = ${FEATURE_EXP_CACHE:-false},
        dark_mode = ${FEATURE_DARK_MODE:-true}
    },
    
    // === ARRAY VALUES WITH ENVIRONMENT VARIABLES ===
    
    // Comma-separated values that get parsed into arrays
    allowed_origins = ${ALLOWED_ORIGINS:-"http://localhost:3000,http://localhost:8080"},
    trusted_proxies = ${TRUSTED_PROXIES:-"127.0.0.1,::1"},
    
    // === CONDITIONAL CONFIGURATION ===
    
    // Different settings based on environment
    cache = {
        // Use Redis in production, memory in development
        type = ${CACHE_TYPE:-"memory"},
        redis_url = ${REDIS_URL:-"redis://localhost:6379"},
        memory_size_mb = ${CACHE_MEMORY_MB:-64}
    },
    
    // === SECURITY BEST PRACTICES ===
    
    security = {
        // Never put actual secrets in defaults
        jwt_secret = ${JWT_SECRET},  // Must be provided
        encryption_key = ${ENCRYPTION_KEY},  // Must be provided
        
        // Safe defaults for security settings
        session_timeout = ${SESSION_TIMEOUT:-3600},
        max_login_attempts = ${MAX_LOGIN_ATTEMPTS:-5},
        password_min_length = ${PASSWORD_MIN_LENGTH:-8}
    },
    
    // === MONITORING AND OBSERVABILITY ===
    
    monitoring = {
        enabled = ${MONITORING_ENABLED:-true},
        endpoint = ${MONITORING_ENDPOINT:-"http://localhost:9090"},
        interval_seconds = ${MONITORING_INTERVAL:-60},
        
        // Metrics configuration
        metrics = {
            enabled = ${METRICS_ENABLED:-true},
            port = ${METRICS_PORT:-9100},
            path = ${METRICS_PATH:-"/metrics"}
        },
        
        // Logging configuration
        logging = {
            level = ${LOG_LEVEL:-"info"},
            format = ${LOG_FORMAT:-"json"},
            output = ${LOG_OUTPUT:-"stdout"}
        }
    }
}
