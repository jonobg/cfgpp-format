{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "CFG++ Schema",
  "scopeName": "source.cfgpp-schema",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#enum-definition"
    },
    {
      "include": "#schema-definition"
    },
    {
      "include": "#field-definition"
    },
    {
      "include": "#validation-block"
    },
    {
      "include": "#import-statement"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#booleans"
    },
    {
      "include": "#arrays"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.cfgpp-schema",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.cfgpp-schema",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "enum-definition": {
      "patterns": [
        {
          "match": "\\b(enum)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "keyword.control.enum.cfgpp-schema"
            },
            "2": {
              "name": "punctuation.whitespace.cfgpp-schema"
            },
            "3": {
              "name": "entity.name.type.enum.cfgpp-schema"
            }
          }
        }
      ]
    },
    "schema-definition": {
      "patterns": [
        {
          "match": "\\b(schema)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "keyword.control.schema.cfgpp-schema"
            },
            "2": {
              "name": "punctuation.whitespace.cfgpp-schema"
            },
            "3": {
              "name": "entity.name.type.schema.cfgpp-schema"
            }
          }
        }
      ]
    },
    "field-definition": {
      "patterns": [
        {
          "match": "\\b(required|optional)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)(\\s+)([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": {
              "name": "storage.modifier.cfgpp-schema"
            },
            "2": {
              "name": "punctuation.whitespace.cfgpp-schema"
            },
            "3": {
              "name": "storage.type.cfgpp-schema"
            },
            "4": {
              "name": "punctuation.whitespace.cfgpp-schema"
            },
            "5": {
              "name": "variable.other.field.cfgpp-schema"
            }
          }
        }
      ]
    },
    "validation-block": {
      "patterns": [
        {
          "name": "meta.structure.validation.cfgpp-schema",
          "begin": "\\b(validation)\\s*\\{",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.validation.cfgpp-schema"
            }
          },
          "end": "\\}",
          "patterns": [
            {
              "include": "#validation-rules"
            },
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "validation-rules": {
      "patterns": [
        {
          "name": "entity.name.function.validation.cfgpp-schema",
          "match": "\\b(min|max|length|pattern|range|custom)\\b"
        }
      ]
    },
    "import-statement": {
      "patterns": [
        {
          "match": "\\b(import)(\\s+)(\"[^\"]*\")",
          "captures": {
            "1": {
              "name": "keyword.control.import.cfgpp-schema"
            },
            "2": {
              "name": "punctuation.whitespace.cfgpp-schema"
            },
            "3": {
              "name": "string.quoted.double.import.cfgpp-schema"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.cfgpp-schema",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.cfgpp-schema",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.cfgpp-schema",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.cfgpp-schema",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "arrays": {
      "patterns": [
        {
          "name": "meta.structure.array.cfgpp-schema",
          "begin": "\\[",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.array.begin.cfgpp-schema"
            }
          },
          "end": "\\]",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.array.end.cfgpp-schema"
            }
          },
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.cfgpp-schema",
          "match": "="
        },
        {
          "name": "punctuation.separator.comma.cfgpp-schema",
          "match": ","
        },
        {
          "name": "punctuation.definition.block.begin.cfgpp-schema",
          "match": "\\{"
        },
        {
          "name": "punctuation.definition.block.end.cfgpp-schema",
          "match": "\\}"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.cfgpp-schema",
          "match": "\\b(enum|schema|validation|import|extends)\\b"
        },
        {
          "name": "storage.modifier.cfgpp-schema",
          "match": "\\b(required|optional)\\b"
        },
        {
          "name": "storage.type.cfgpp-schema",
          "match": "\\b(string|int|float|bool|array)\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.property.cfgpp-schema",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*=)"
        },
        {
          "name": "variable.other.cfgpp-schema",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}
