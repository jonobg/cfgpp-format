CTT1
TOC-SIZE:319
SECTIONS:12
CREATED:2025-10-01T16:47:35.870819Z
---TOC-V1-START---
AP,124,57,PROD
AP,181,31,PROD
AP,212,92,PROD
ST,304,96,PROD
AP,400,32,PROD
DB,432,3545,PROD
DB,3977,1788,PROD
DB,5765,3304,PROD
NT,9069,252,PROD
SC,9321,438,PROD
LG,9759,633,PROD
AP,10392,31,PROD
---TOC-V1-END---
---CONTENT-V1-START---
---AP-START---
* Multi-line comment header
---AP-END---

---AP-START---
*
---AP-END---

---AP-START---
* This configuration demonstrates proper commenting techniques
---AP-END---

---ST-START---
* for CFGPP files. Good comments make configurations maintainable!
---ST-END---

---AP-START---
*/
---AP-END---

---DB-START---
CommentsDemo {
    // === SINGLE-LINE COMMENTS ===
    
    // This is a single-line comment explaining the next setting
    app_name = "Comments Demo",
    
    // Comments can explain WHY a value is chosen
    max_connections = 100,  // Based on load testing results from 2024-10-01
    
    // Use comments to explain complex or non-obvious values
    timeout_ms = 30000,  // 30 seconds - must be longer than DB query timeout
    
    // === END-OF-LINE COMMENTS ===
    
    debug = true,           // Enable during development
    log_level = "info",     // Options: debug, info, warn, error
    port = 8080,           // Standard development port
    
    // === MULTI-LINE COMMENTS ===
    
    /*
     * Database configuration section
     * 
     * These settings control database connectivity.
     * Update these values for different environments.
     */
    database = {
        host = "localhost",     // Database server hostname
        port = 5432,           // PostgreSQL default port
        name = "myapp_dev",    // Development database name
        
        /* Connection pool settings
           These values were tuned based on:
           - Expected concurrent users: 50-100
           - Average query time: 50ms
           - Server memory: 8GB */
        pool = {
            min_connections = 5,    // Always keep 5 connections open
            max_connections = 20,   // Never exceed 20 connections
            idle_timeout = 300      // Close idle connections after 5 minutes
        }
    },
    
    // === DOCUMENTATION COMMENTS ===
    
    // API Configuration
    // Configure external API endpoints and authentication
    api = {
        // Base URL for the external service
        // Format: https://domain.com/api/v1
        base_url = "https://api.example.com/v1",
        
        // API key for authentication
        // Obtain from: https://example.com/dashboard/api-keys
        api_key = "your-api-key-here",
        
        // Request timeout in milliseconds
        // Recommended: 5000-30000 (5-30 seconds)
        timeout = 15000,
        
        // Retry configuration
        retry = {
            max_attempts = 3,       // Total attempts (including initial)
            backoff_ms = 1000,      // Wait time between retries
            exponential = true      // Double wait time each retry
        }
    },
    
    // === COMMENTING OUT SECTIONS ===
    
    // Temporarily disabled features
    // experimental_features = {
    //     new_ui = true,
    //     beta_api = false
    // },
    
    /*
     * Legacy configuration (commented out)
     * 
     * old_database = {
     *     host = "old-server.com",
     *     port = 3306
     * }
     */
    
    // === BEST PRACTICES DEMONSTRATED ===
    
    // ✅ DO: Explain WHY, not just WHAT
    cache_ttl = 3600,  // 1 hour - balances freshness with performance
    
    // ✅ DO: Document units and ranges
    memory_limit = 512,  // MB - must be between 256-1024
    
    // ✅ DO: Reference external documentation
    encryption = {
        algorithm = "AES-256",  // See: https://wiki.company.com/security-standards
        key_rotation = 90       // Days - per compliance requirement SEC-001
    },
    
    // ✅ DO: Explain environment-specific values
    monitoring = {
        enabled = true,         // Always enabled in production
        endpoint = "localhost", // Points to local agent in dev/staging
        interval = 60          // Seconds - more frequent in dev for debugging
    }
}
---DB-END---

---DB-START---
DataTypesDemo {
    // === STRING TYPES ===
    simple_string = "Hello World",
    quoted_string = "This is a quoted string",
    empty_string = "",
    string_with_spaces = "   padded string   ",
    special_chars = "Special chars: !@#$%^&*()",
    
    // === NUMERIC TYPES ===
    positive_integer = 42,
    negative_integer = -17,
    zero = 0,
    large_number = 1000000,
    
    // Floating point numbers
    pi = 3.14159,
    negative_float = -2.5,
    scientific_notation = 1.23e-4,
    
    // === BOOLEAN TYPES ===
    enabled = true,
    disabled = false,
    feature_flag = true,
    debug_mode = false,
    
    // === ARRAY TYPES ===
    
    // String arrays
    fruits = ["apple", "banana", "cherry"],
    empty_array = [],
    single_item = ["lonely"],
    
    // Numeric arrays
    fibonacci = [1, 1, 2, 3, 5, 8, 13],
    temperatures = [98.6, 100.0, 102.5],
    
    // Boolean arrays
    flags = [true, false, true, true],
    
    // Mixed type arrays (advanced feature)
    mixed_data = [42, "hello", true, 3.14],
    
    // === NESTED OBJECTS ===
    database = {
        host = "localhost",
        port = 5432,
        name = "myapp",
        ssl_enabled = true
    },
    
    // Deeply nested objects
    server = {
        http = {
            port = 80,
            ssl = false
        },
        https = {
            port = 443,
            ssl = true,
            certificate = "/path/to/cert.pem"
        }
    },
    
    // === SPECIAL VALUES ===
    null_value = null,
    
    // === ARRAYS OF OBJECTS ===
    users = [
        {
            name = "Alice",
            age = 30,
            admin = true
        },
        {
            name = "Bob", 
            age = 25,
            admin = false
        }
    ]
}
---DB-END---

---DB-START---
EnvironmentVariablesDemo {
    // === BASIC ENVIRONMENT VARIABLE USAGE ===
    
    // Required environment variable (no default)
    // Will fail if DATABASE_URL is not set
    database_url = ${DATABASE_URL},
    
    // Environment variable with default fallback
    // Uses "localhost:5432" if DB_HOST is not set
    database_host = ${DB_HOST:-"localhost:5432"},
    
    // === COMMON PATTERNS ===
    
    // Application settings
    app_name = ${APP_NAME:-"My Application"},
    app_version = ${APP_VERSION:-"1.0.0"},
    environment = ${ENVIRONMENT:-"development"},
    
    // Server configuration
    server = {
        host = ${SERVER_HOST:-"0.0.0.0"},
        port = ${SERVER_PORT:-8080},
        workers = ${WORKER_COUNT:-4}
    },
    
    // Database configuration
    database = {
        host = ${DB_HOST:-"localhost"},
        port = ${DB_PORT:-5432},
        name = ${DB_NAME:-"myapp"},
        user = ${DB_USER:-"postgres"},
        password = ${DB_PASSWORD},  // Required - no default for security
        ssl_mode = ${DB_SSL_MODE:-"prefer"}
    },
    
    // === DIFFERENT DATA TYPES ===
    
    // String values (most common)
    log_level = ${LOG_LEVEL:-"info"},
    secret_key = ${SECRET_KEY:-"dev-secret-key-change-in-production"},
    
    // Numeric values
    max_connections = ${MAX_CONNECTIONS:-100},
    timeout_seconds = ${TIMEOUT_SECONDS:-30},
    memory_limit_mb = ${MEMORY_LIMIT_MB:-512},
    
    // Boolean values
    debug_mode = ${DEBUG:-false},
    enable_metrics = ${ENABLE_METRICS:-true},
    maintenance_mode = ${MAINTENANCE_MODE:-false},
    
    // === ADVANCED PATTERNS ===
    
    // URL construction
    redis_url = ${REDIS_URL:-"redis://localhost:6379/0"},
    elasticsearch_url = ${ELASTICSEARCH_URL:-"http://localhost:9200"},
    
    // File paths
    log_file = ${LOG_FILE:-"/var/log/myapp.log"},
    config_dir = ${CONFIG_DIR:-"/etc/myapp"},
    data_dir = ${DATA_DIR:-"/var/lib/myapp"},
    
    // API keys and secrets
    api_keys = {
        stripe = ${STRIPE_API_KEY},           // Required
        sendgrid = ${SENDGRID_API_KEY},       // Required  
        analytics = ${ANALYTICS_KEY:-""},     // Optional
    },
    
    // === ENVIRONMENT-SPECIFIC CONFIGURATIONS ===
    
    // Development settings
    development = {
        database_url = ${DEV_DATABASE_URL:-"postgres://localhost/myapp_dev"},
        log_level = ${DEV_LOG_LEVEL:-"debug"},
        enable_hot_reload = ${DEV_HOT_RELOAD:-true}
    },
    
    // Production settings
    production = {
        database_url = ${PROD_DATABASE_URL},  // Required in production
        log_level = ${PROD_LOG_LEVEL:-"warn"},
        enable_monitoring = ${PROD_MONITORING:-true},
        replica_count = ${PROD_REPLICAS:-3}
    },
    
    // === FEATURE FLAGS ===
    
    features = {
        new_ui = ${FEATURE_NEW_UI:-false},
        beta_api = ${FEATURE_BETA_API:-false},
        experimental_cache = ${FEATURE_EXP_CACHE:-false},
        dark_mode = ${FEATURE_DARK_MODE:-true}
    },
    
    // === ARRAY VALUES WITH ENVIRONMENT VARIABLES ===
    
    // Comma-separated values that get parsed into arrays
    allowed_origins = ${ALLOWED_ORIGINS:-"http://localhost:3000,http://localhost:8080"},
    trusted_proxies = ${TRUSTED_PROXIES:-"127.0.0.1,::1"},
---DB-END---

---NT-START---
cache = {
        // Use Redis in production, memory in development
        type = ${CACHE_TYPE:-"memory"},
        redis_url = ${REDIS_URL:-"redis://localhost:6379"},
        memory_size_mb = ${CACHE_MEMORY_MB:-64}
    },
---NT-END---

---SC-START---
security = {
        // Never put actual secrets in defaults
        jwt_secret = ${JWT_SECRET},  // Must be provided
        encryption_key = ${ENCRYPTION_KEY},  // Must be provided
        
        // Safe defaults for security settings
        session_timeout = ${SESSION_TIMEOUT:-3600},
        max_login_attempts = ${MAX_LOGIN_ATTEMPTS:-5},
        password_min_length = ${PASSWORD_MIN_LENGTH:-8}
    },
---SC-END---

---LG-START---
monitoring = {
        enabled = ${MONITORING_ENABLED:-true},
        endpoint = ${MONITORING_ENDPOINT:-"http://localhost:9090"},
        interval_seconds = ${MONITORING_INTERVAL:-60},
        
        // Metrics configuration
        metrics = {
            enabled = ${METRICS_ENABLED:-true},
            port = ${METRICS_PORT:-9100},
            path = ${METRICS_PATH:-"/metrics"}
        },
        
        // Logging configuration
        logging = {
            level = ${LOG_LEVEL:-"info"},
            format = ${LOG_FORMAT:-"json"},
            output = ${LOG_OUTPUT:-"stdout"}
        }
    }
---LG-END---

---AP-START---
}
---AP-END---

